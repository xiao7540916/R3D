#version 460
//降采样coc到半分辨率，求最大最小值，取其中绝对值大的(保留符号)，而非平均，结果存入环形采样结果的a通道中
uniform float uSampleRadius;
uniform int uDstWidth;
uniform int uDstHeight;
layout (binding = 0) uniform sampler2D srcTex;
layout (binding = 1, rgba32f) uniform image2D dstImage;

layout(local_size_x = 16, local_size_y = 16) in;
/*in uvec3 gl_NumWorkGroups;
in uvec3 gl_WorkGroupID;
in uvec3 gl_LocalInvocationID;
in uvec3 gl_GlobalInvocationID;
in uint gl_LocalInvocationIndex;

gl_NumWorkGroups：此变量包含传递给调度功能的工作组数。
gl_WorkGroupID：这是此着色器调用的当前工作组。每个XYZ组件将处于半开范围[0，gl_NumWorkGroups.XYZ）
gl_LocalInvocationID：这是着色器的当前调用中的工作组。每个XYZ组件将处于半开范围[0，gl_WorkGroupSize.XYZ）
gl_GlobalInvocationID：此值在此计算调度调用的所有调用中唯一标识该计算着色器的特定调用
它跟前者有着等式关系：gl_GlobalInvocationID = gl_WorkGroupID * gl_WorkGroupSize + gl_LocalInvocationID;
gl_LocalInvocationIndex：这是gl_LocalInvocationID的一维版本。它在工作组中标识此调用的索引
它跟前者有着等式关系： gl_LocalInvocationIndex =
gl_LocalInvocationID.z * gl_WorkGroupSize.x * gl_WorkGroupSize.y +
gl_LocalInvocationID.y * gl_WorkGroupSize.x +
gl_LocalInvocationID.x;*/
/*
//gl_GlobalInvocationID.xy 全局工作组的位置gl_WorkGroupID*gl_WorkGroupSize+gl_LocalInvocationID
//gl_LocalInvocationID.xy 本地工作组的序号(0,0,0)到(3,3,1);
//gl_WorkGroupID 当前工作组在全局工作组中的位置（0,0,0）到（299,224,0）
//gl_WorkGroupSize.xyz 工作组大小(4,4,1)
//gl_NumWorkGroups 工作组个数向量vec3(300,225,1);
*/
float Sample(vec2 uv){
    return texture(srcTex, uv).r;
}

vec4 SampleBox(vec2 uv, vec2 texelSize){
    vec4 o = texelSize.xyxy*vec2(-1, 1).xxyy*uSampleRadius;
    float colxy = Sample(uv+o.xy);
    float colzy = Sample(uv+o.zy);
    float colxw = Sample(uv+o.xw);
    float colzw = Sample(uv+o.zw);
    float cocmin = min(min(min(colxy, colzy), colxw), colzw);
    float cocmax = max(max(max(colxy, colzy), colxw), colzw);
    float s = cocmax>=-cocmin?cocmax:cocmin;
    vec3 dstcol = imageLoad(dstImage, ivec2(gl_GlobalInvocationID.xy)).rgb;
    return vec4(dstcol, s);
}
void main()
{
    vec2 texUV = (vec2(gl_GlobalInvocationID.xy)+vec2(1.0))/vec2(uDstWidth, uDstHeight);
    vec2 texelSize = 1.0 / textureSize(srcTex, 0);
    vec4 col = SampleBox(texUV, texelSize);
    imageStore(dstImage, ivec2(gl_GlobalInvocationID.xy), col);
}
